[
  {
    "Target": "deploy.yaml",
    "Class": "config",
    "Type": "kubernetes",
    "Misconfigurations": [
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV001",
        "AVDID": "AVD-KSV-0001",
        "Title": "Process can elevate its own privileges",
        "Description": "A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.",
        "Message": "Container 'wade-test' of Deployment 'wade-test-deployment' should set 'securityContext.allowPrivilegeEscalation' to false",
        "Namespace": "builtin.kubernetes.KSV001",
        "Query": "data.builtin.kubernetes.KSV001.deny",
        "Resolution": "Set 'set containers[].securityContext.allowPrivilegeEscalation' to 'false'.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv001",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
          "https://avd.aquasec.com/misconfig/ksv001"
        ],
        "Status": "FAIL",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "StartLine": 19,
          "EndLine": 23,
          "Code": {
            "Lines": [
              {
                "Number": 19,
                "Content": "      - name: wade-test",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": true,
                "LastCause": false
              },
              {
                "Number": 20,
                "Content": "        image: wade23/deploy:deploytest",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 21,
                "Content": "        imagePullPolicy: Always",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 22,
                "Content": "        ports:",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 23,
                "Content": "        - containerPort: 6100",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": true
              }
            ]
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV003",
        "AVDID": "AVD-KSV-0003",
        "Title": "Default capabilities not dropped",
        "Description": "The container should drop all default capabilities and add only those that are needed for its execution.",
        "Message": "Container 'wade-test' of Deployment 'wade-test-deployment' should add 'ALL' to 'securityContext.capabilities.drop'",
        "Namespace": "builtin.kubernetes.KSV003",
        "Query": "data.builtin.kubernetes.KSV003.deny",
        "Resolution": "Add 'ALL' to containers[].securityContext.capabilities.drop.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv003",
        "References": [
          "https://kubesec.io/basics/containers-securitycontext-capabilities-drop-index-all/",
          "https://avd.aquasec.com/misconfig/ksv003"
        ],
        "Status": "FAIL",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "StartLine": 19,
          "EndLine": 23,
          "Code": {
            "Lines": [
              {
                "Number": 19,
                "Content": "      - name: wade-test",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": true,
                "LastCause": false
              },
              {
                "Number": 20,
                "Content": "        image: wade23/deploy:deploytest",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 21,
                "Content": "        imagePullPolicy: Always",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 22,
                "Content": "        ports:",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 23,
                "Content": "        - containerPort: 6100",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": true
              }
            ]
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV011",
        "AVDID": "AVD-KSV-0011",
        "Title": "CPU not limited",
        "Description": "Enforcing CPU limits prevents DoS via resource exhaustion.",
        "Message": "Container 'wade-test' of Deployment 'wade-test-deployment' should set 'resources.limits.cpu'",
        "Namespace": "builtin.kubernetes.KSV011",
        "Query": "data.builtin.kubernetes.KSV011.deny",
        "Resolution": "Set a limit value under 'containers[].resources.limits.cpu'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv011",
        "References": [
          "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
          "https://avd.aquasec.com/misconfig/ksv011"
        ],
        "Status": "FAIL",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "StartLine": 19,
          "EndLine": 23,
          "Code": {
            "Lines": [
              {
                "Number": 19,
                "Content": "      - name: wade-test",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": true,
                "LastCause": false
              },
              {
                "Number": 20,
                "Content": "        image: wade23/deploy:deploytest",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 21,
                "Content": "        imagePullPolicy: Always",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 22,
                "Content": "        ports:",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 23,
                "Content": "        - containerPort: 6100",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": true
              }
            ]
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV012",
        "AVDID": "AVD-KSV-0012",
        "Title": "Runs as root user",
        "Description": "'runAsNonRoot' forces the running image to run as a non-root user to ensure least privileges.",
        "Message": "Container 'wade-test' of Deployment 'wade-test-deployment' should set 'securityContext.runAsNonRoot' to true",
        "Namespace": "builtin.kubernetes.KSV012",
        "Query": "data.builtin.kubernetes.KSV012.deny",
        "Resolution": "Set 'containers[].securityContext.runAsNonRoot' to true.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv012",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
          "https://avd.aquasec.com/misconfig/ksv012"
        ],
        "Status": "FAIL",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "StartLine": 19,
          "EndLine": 23,
          "Code": {
            "Lines": [
              {
                "Number": 19,
                "Content": "      - name: wade-test",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": true,
                "LastCause": false
              },
              {
                "Number": 20,
                "Content": "        image: wade23/deploy:deploytest",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 21,
                "Content": "        imagePullPolicy: Always",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 22,
                "Content": "        ports:",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 23,
                "Content": "        - containerPort: 6100",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": true
              }
            ]
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV014",
        "AVDID": "AVD-KSV-0014",
        "Title": "Root file system is not read-only",
        "Description": "An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.",
        "Message": "Container 'wade-test' of Deployment 'wade-test-deployment' should set 'securityContext.readOnlyRootFilesystem' to true",
        "Namespace": "builtin.kubernetes.KSV014",
        "Query": "data.builtin.kubernetes.KSV014.deny",
        "Resolution": "Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv014",
        "References": [
          "https://kubesec.io/basics/containers-securitycontext-readonlyrootfilesystem-true/",
          "https://avd.aquasec.com/misconfig/ksv014"
        ],
        "Status": "FAIL",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "StartLine": 19,
          "EndLine": 23,
          "Code": {
            "Lines": [
              {
                "Number": 19,
                "Content": "      - name: wade-test",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": true,
                "LastCause": false
              },
              {
                "Number": 20,
                "Content": "        image: wade23/deploy:deploytest",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 21,
                "Content": "        imagePullPolicy: Always",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 22,
                "Content": "        ports:",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 23,
                "Content": "        - containerPort: 6100",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": true
              }
            ]
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV015",
        "AVDID": "AVD-KSV-0015",
        "Title": "CPU requests not specified",
        "Description": "When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
        "Message": "Container 'wade-test' of Deployment 'wade-test-deployment' should set 'resources.requests.cpu'",
        "Namespace": "builtin.kubernetes.KSV015",
        "Query": "data.builtin.kubernetes.KSV015.deny",
        "Resolution": "Set 'containers[].resources.requests.cpu'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv015",
        "References": [
          "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
          "https://avd.aquasec.com/misconfig/ksv015"
        ],
        "Status": "FAIL",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "StartLine": 19,
          "EndLine": 23,
          "Code": {
            "Lines": [
              {
                "Number": 19,
                "Content": "      - name: wade-test",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": true,
                "LastCause": false
              },
              {
                "Number": 20,
                "Content": "        image: wade23/deploy:deploytest",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 21,
                "Content": "        imagePullPolicy: Always",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 22,
                "Content": "        ports:",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 23,
                "Content": "        - containerPort: 6100",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": true
              }
            ]
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV016",
        "AVDID": "AVD-KSV-0016",
        "Title": "Memory requests not specified",
        "Description": "When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
        "Message": "Container 'wade-test' of Deployment 'wade-test-deployment' should set 'resources.requests.memory'",
        "Namespace": "builtin.kubernetes.KSV016",
        "Query": "data.builtin.kubernetes.KSV016.deny",
        "Resolution": "Set 'containers[].resources.requests.memory'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv016",
        "References": [
          "https://kubesec.io/basics/containers-resources-limits-memory/",
          "https://avd.aquasec.com/misconfig/ksv016"
        ],
        "Status": "FAIL",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "StartLine": 19,
          "EndLine": 23,
          "Code": {
            "Lines": [
              {
                "Number": 19,
                "Content": "      - name: wade-test",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": true,
                "LastCause": false
              },
              {
                "Number": 20,
                "Content": "        image: wade23/deploy:deploytest",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 21,
                "Content": "        imagePullPolicy: Always",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 22,
                "Content": "        ports:",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 23,
                "Content": "        - containerPort: 6100",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": true
              }
            ]
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV018",
        "AVDID": "AVD-KSV-0018",
        "Title": "Memory not limited",
        "Description": "Enforcing memory limits prevents DoS via resource exhaustion.",
        "Message": "Container 'wade-test' of Deployment 'wade-test-deployment' should set 'resources.limits.memory'",
        "Namespace": "builtin.kubernetes.KSV018",
        "Query": "data.builtin.kubernetes.KSV018.deny",
        "Resolution": "Set a limit value under 'containers[].resources.limits.memory'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv018",
        "References": [
          "https://kubesec.io/basics/containers-resources-limits-memory/",
          "https://avd.aquasec.com/misconfig/ksv018"
        ],
        "Status": "FAIL",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "StartLine": 19,
          "EndLine": 23,
          "Code": {
            "Lines": [
              {
                "Number": 19,
                "Content": "      - name: wade-test",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": true,
                "LastCause": false
              },
              {
                "Number": 20,
                "Content": "        image: wade23/deploy:deploytest",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 21,
                "Content": "        imagePullPolicy: Always",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 22,
                "Content": "        ports:",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 23,
                "Content": "        - containerPort: 6100",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": true
              }
            ]
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV020",
        "AVDID": "AVD-KSV-0020",
        "Title": "Runs with low user ID",
        "Description": "Force the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table.",
        "Message": "Container 'wade-test' of Deployment 'wade-test-deployment' should set 'securityContext.runAsUser' \u003e 10000",
        "Namespace": "builtin.kubernetes.KSV020",
        "Query": "data.builtin.kubernetes.KSV020.deny",
        "Resolution": "Set 'containers[].securityContext.runAsUser' to an integer \u003e 10000.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv020",
        "References": [
          "https://kubesec.io/basics/containers-securitycontext-runasuser/",
          "https://avd.aquasec.com/misconfig/ksv020"
        ],
        "Status": "FAIL",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "StartLine": 19,
          "EndLine": 23,
          "Code": {
            "Lines": [
              {
                "Number": 19,
                "Content": "      - name: wade-test",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": true,
                "LastCause": false
              },
              {
                "Number": 20,
                "Content": "        image: wade23/deploy:deploytest",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 21,
                "Content": "        imagePullPolicy: Always",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 22,
                "Content": "        ports:",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 23,
                "Content": "        - containerPort: 6100",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": true
              }
            ]
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV021",
        "AVDID": "AVD-KSV-0021",
        "Title": "Runs with low group ID",
        "Description": "Force the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table.",
        "Message": "Container 'wade-test' of Deployment 'wade-test-deployment' should set 'securityContext.runAsGroup' \u003e 10000",
        "Namespace": "builtin.kubernetes.KSV021",
        "Query": "data.builtin.kubernetes.KSV021.deny",
        "Resolution": "Set 'containers[].securityContext.runAsGroup' to an integer \u003e 10000.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv021",
        "References": [
          "https://kubesec.io/basics/containers-securitycontext-runasuser/",
          "https://avd.aquasec.com/misconfig/ksv021"
        ],
        "Status": "FAIL",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "StartLine": 19,
          "EndLine": 23,
          "Code": {
            "Lines": [
              {
                "Number": 19,
                "Content": "      - name: wade-test",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": true,
                "LastCause": false
              },
              {
                "Number": 20,
                "Content": "        image: wade23/deploy:deploytest",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 21,
                "Content": "        imagePullPolicy: Always",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 22,
                "Content": "        ports:",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 23,
                "Content": "        - containerPort: 6100",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": true
              }
            ]
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV030",
        "AVDID": "AVD-KSV-0030",
        "Title": "Default Seccomp profile not set",
        "Description": "The RuntimeDefault/Localhost seccomp profile must be required, or allow specific additional profiles.",
        "Message": "Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'",
        "Namespace": "builtin.kubernetes.KSV030",
        "Query": "data.builtin.kubernetes.KSV030.deny",
        "Resolution": "Set 'spec.securityContext.seccompProfile.type', 'spec.containers[*].securityContext.seccompProfile' and 'spec.initContainers[*].securityContext.seccompProfile' to 'RuntimeDefault' or undefined.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv030",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
          "https://avd.aquasec.com/misconfig/ksv030"
        ],
        "Status": "FAIL",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "StartLine": 19,
          "EndLine": 23,
          "Code": {
            "Lines": [
              {
                "Number": 19,
                "Content": "      - name: wade-test",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": true,
                "LastCause": false
              },
              {
                "Number": 20,
                "Content": "        image: wade23/deploy:deploytest",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 21,
                "Content": "        imagePullPolicy: Always",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 22,
                "Content": "        ports:",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 23,
                "Content": "        - containerPort: 6100",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": true
              }
            ]
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV106",
        "AVDID": "AVD-KSV-0106",
        "Title": "Container capabilities must only include NET_BIND_SERVICE",
        "Description": "Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.",
        "Message": "container should drop all",
        "Namespace": "builtin.kubernetes.KSV106",
        "Query": "data.builtin.kubernetes.KSV106.deny",
        "Resolution": "Set 'spec.containers[*].securityContext.capabilities.drop' to 'ALL' and only add 'NET_BIND_SERVICE' to 'spec.containers[*].securityContext.capabilities.add'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv106",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
          "https://avd.aquasec.com/misconfig/ksv106"
        ],
        "Status": "FAIL",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "StartLine": 19,
          "EndLine": 23,
          "Code": {
            "Lines": [
              {
                "Number": 19,
                "Content": "      - name: wade-test",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": true,
                "LastCause": false
              },
              {
                "Number": 20,
                "Content": "        image: wade23/deploy:deploytest",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 21,
                "Content": "        imagePullPolicy: Always",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 22,
                "Content": "        ports:",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": false
              },
              {
                "Number": 23,
                "Content": "        - containerPort: 6100",
                "IsCause": true,
                "Annotation": "",
                "Truncated": false,
                "FirstCause": false,
                "LastCause": true
              }
            ]
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "N/A",
        "Title": "N/A",
        "Description": "Rego module: data.defsec.kubernetes.KSV107",
        "Message": "No issues found",
        "Namespace": "defsec.kubernetes.KSV107",
        "Query": "data.defsec.kubernetes.KSV107.deny",
        "Severity": "UNKNOWN",
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0001",
        "AVDID": "AVD-KCV-0001",
        "Title": "Ensure that the --anonymous-auth argument is set to false",
        "Description": "Disable anonymous requests to the API server.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0001",
        "Query": "data.builtin.kubernetes.KCV0001.deny",
        "Resolution": "Set '--anonymous-auth' to 'false'.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0001",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0001"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0002",
        "AVDID": "AVD-KCV-0002",
        "Title": "Ensure that the --token-auth-file parameter is not set",
        "Description": "Do not use token based authentication.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0002",
        "Query": "data.builtin.kubernetes.KCV0002.deny",
        "Resolution": "Follow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and remove the --token-auth-file=\u003cfilename\u003e parameter.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0002",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0002"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0003",
        "AVDID": "AVD-KCV-0003",
        "Title": "Ensure that the --DenyServiceExternalIPs is not set",
        "Description": "This admission controller rejects all net-new usage of the Service field externalIPs.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0003",
        "Query": "data.builtin.kubernetes.KCV0003.deny",
        "Resolution": "Edit the API server pod specification file $apiserverconf on the control plane node and remove the `DenyServiceExternalIPs` from enabled admission plugins.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0003",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0003"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0004",
        "AVDID": "AVD-KCV-0004",
        "Title": "Ensure that the --kubelet-https argument is set to true",
        "Description": "Use https for kubelet connections.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0004",
        "Query": "data.builtin.kubernetes.KCV0004.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and remove the --kubelet-https parameter.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0004",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0004"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0005",
        "AVDID": "AVD-KCV-0005",
        "Title": "Ensure that the --kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate",
        "Description": "Enable certificate based kubelet authentication.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0005",
        "Query": "data.builtin.kubernetes.KCV0005.deny",
        "Resolution": "Follow the Kubernetes documentation and set up the TLS connection between the apiserver and kubelets.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0005",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0005"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0006",
        "AVDID": "AVD-KCV-0006",
        "Title": "Ensure that the --kubelet-certificate-authority argument is set as appropriate",
        "Description": "Verify kubelet's certificate before establishing connection.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0006",
        "Query": "data.builtin.kubernetes.KCV0006.deny",
        "Resolution": "Follow the Kubernetes documentation and setup the TLS connection between the apiserver and kubelets. ",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0006",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0006"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0007",
        "AVDID": "AVD-KCV-0007",
        "Title": "Ensure that the --authorization-mode argument is not set to AlwaysAllow",
        "Description": "Do not always authorize all requests.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0007",
        "Query": "data.builtin.kubernetes.KCV0007.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --authorization-mode parameter to values other than AlwaysAllow. ",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0007",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0007"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0008",
        "AVDID": "AVD-KCV-0008",
        "Title": "Ensure that the --authorization-mode argument includes Node",
        "Description": "Restrict kubelet nodes to reading only objects associated with them.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0008",
        "Query": "data.builtin.kubernetes.KCV0008.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --authorization-mode parameter to a value that includes Node.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0008",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0008"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0009",
        "AVDID": "AVD-KCV-0009",
        "Title": "Ensure that the --authorization-mode argument includes RBAC",
        "Description": "Turn on Role Based Access Control.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0009",
        "Query": "data.builtin.kubernetes.KCV0009.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --authorization-mode parameter to a value that includes RBAC.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0009",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0009"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0010",
        "AVDID": "AVD-KCV-0010",
        "Title": "Ensure that the admission control plugin EventRateLimit is set",
        "Description": "Limit the rate at which the API server accepts requests.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0010",
        "Query": "data.builtin.kubernetes.KCV0010.deny",
        "Resolution": "Follow the Kubernetes documentation and set the desired limits in a configuration file. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml and set the below parameters.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0010",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0010"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0011",
        "AVDID": "AVD-KCV-0011",
        "Title": "Ensure that the admission control plugin AlwaysAdmit is not set",
        "Description": "Do not allow all requests.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0011",
        "Query": "data.builtin.kubernetes.KCV0011.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and either remove the --enable-admission- plugins parameter, or set it to a value that does not include AlwaysAdmit.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0011",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0011"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV0012",
        "AVDID": "AVD-KCV-0012",
        "Title": "Ensure that the admission control plugin AlwaysPullImages is set",
        "Description": "Always pull images.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0012",
        "Query": "data.builtin.kubernetes.KCV0012.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --enable-admission-plugins parameter to include AlwaysPullImages.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv0012",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/ksv0012"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0013",
        "AVDID": "AVD-KCV-0013",
        "Title": "Ensure that the admission control plugin SecurityContextDeny is set if PodSecurityPolicy is not used",
        "Description": "The SecurityContextDeny admission controller can be used to deny pods which make use of some SecurityContext fields which could allow for privilege escalation in the cluster. This should be used where PodSecurityPolicy is not in place within the cluster.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0013",
        "Query": "data.builtin.kubernetes.KCV0013.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --enable-admission-plugins parameter to include SecurityContextDeny, unless PodSecurityPolicy is already in place.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0013",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0013"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0014",
        "AVDID": "AVD-KCV-0014",
        "Title": "Ensure that the admission control plugin ServiceAccount is set",
        "Description": "Automate service accounts management.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0014",
        "Query": "data.builtin.kubernetes.KCV0014.deny",
        "Resolution": "Follow the documentation and create ServiceAccount objects as per your environment. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and ensure that the --disable-admission-plugins parameter is set to a value that does not include ServiceAccount.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0014",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0014"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0015",
        "AVDID": "AVD-KCV-0015",
        "Title": "Ensure that the admission control plugin NamespaceLifecycle is set",
        "Description": "Reject creating objects in a namespace that is undergoing termination.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0015",
        "Query": "data.builtin.kubernetes.KCV0015.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --disable-admission-plugins parameter to ensure it does not include NamespaceLifecycle.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0015",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0015"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0016",
        "AVDID": "AVD-KCV-0016",
        "Title": "Ensure that the admission control plugin NodeRestriction is set",
        "Description": "Limit the Node and Pod objects that a kubelet could modify.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0016",
        "Query": "data.builtin.kubernetes.KCV0016.deny",
        "Resolution": "Follow the Kubernetes documentation and configure NodeRestriction plug-in on kubelets. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --enable-admission-plugins parameter to a value that includes NodeRestriction.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0016",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0016"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0017",
        "AVDID": "AVD-KCV-0017",
        "Title": "Ensure that the --secure-port argument is not set to 0",
        "Description": "Do not disable the secure port.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0017",
        "Query": "data.builtin.kubernetes.KCV0017.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and either remove the --secure-port parameter or set it to a different (non-zero) desired port.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0017",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0017"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0018",
        "AVDID": "AVD-KCV-0018",
        "Title": "Ensure that the --profiling argument is set to false",
        "Description": "Disable profiling, if not needed.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0018",
        "Query": "data.builtin.kubernetes.KCV0018.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the below parameter.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0018",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0018"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0019",
        "AVDID": "AVD-KCV-0019",
        "Title": "Ensure that the --audit-log-path argument is set",
        "Description": "Enable auditing on the Kubernetes API Server and set the desired audit log path.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0019",
        "Query": "data.builtin.kubernetes.KCV0019.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --audit-log-path parameter.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0019",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0019"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0020",
        "AVDID": "AVD-KCV-0020",
        "Title": "Ensure that the --audit-log-maxage argument is set to 30 or as appropriate",
        "Description": "Retain the logs for at least 30 days or as appropriate.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0020",
        "Query": "data.builtin.kubernetes.KCV0020.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --audit-log-maxage parameter to 30 or as an appropriate number of days.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0020",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0020"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0021",
        "AVDID": "AVD-KCV-0021",
        "Title": "Ensure that the --audit-log-maxbackup argument is set to 10 or as appropriate",
        "Description": "Retain 10 or an appropriate number of old log files.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0021",
        "Query": "data.builtin.kubernetes.KCV0021.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --audit-log-maxbackup parameter to 10 or to an appropriate value.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0021",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0021"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0022",
        "AVDID": "AVD-KCV-0022",
        "Title": "Ensure that the --audit-log-maxsize argument is set to 100 or as appropriate",
        "Description": "Rotate log files on reaching 100 MB or as appropriate.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0022",
        "Query": "data.builtin.kubernetes.KCV0022.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --audit-log-maxsize parameter to an appropriate size in MB",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0022",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0022"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0024",
        "AVDID": "AVD-KCV-0024",
        "Title": "Ensure that the --service-account-lookup argument is set to true",
        "Description": "Validate service account before validating token.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0024",
        "Query": "data.builtin.kubernetes.KCV0024.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the below parameter.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0024",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0024"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0025",
        "AVDID": "AVD-KCV-0025",
        "Title": "Ensure that the --service-account-key-file argument is set as appropriate",
        "Description": "Explicitly set a service account public key file for service accounts on the apiserver.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0025",
        "Query": "data.builtin.kubernetes.KCV0025.deny",
        "Resolution": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --service-account-key-file parameter to the public key file for service accounts.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0025",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0025"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0026",
        "AVDID": "AVD-KCV-0026",
        "Title": "Ensure that the --etcd-certfile and --etcd-keyfile arguments are set as appropriate",
        "Description": "etcd should be configured to make use of TLS encryption for client connections.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0026",
        "Query": "data.builtin.kubernetes.KCV0026.deny",
        "Resolution": "Follow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the etcd certificate and key file parameters.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0026",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0026"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0027",
        "AVDID": "AVD-KCV-0027",
        "Title": "Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate",
        "Description": "Setup TLS connection on the API server.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0027",
        "Query": "data.builtin.kubernetes.KCV0027.deny",
        "Resolution": "Follow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the TLS certificate and private key file parameters.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0027",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0027"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0028",
        "AVDID": "AVD-KCV-0028",
        "Title": "Ensure that the --client-ca-file argument is set as appropriate",
        "Description": "Setup TLS connection on the API server.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0028",
        "Query": "data.builtin.kubernetes.KCV0028.deny",
        "Resolution": "Follow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the client certificate authority file.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0028",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0028"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0029",
        "AVDID": "AVD-KCV-0029",
        "Title": "Ensure that the --etcd-cafile argument is set as appropriate",
        "Description": "etcd should be configured to make use of TLS encryption for client connections.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0029",
        "Query": "data.builtin.kubernetes.KCV0029.deny",
        "Resolution": "Follow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the etcd certificate authority file parameter.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0029",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0029"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0030",
        "AVDID": "AVD-KCV-0030",
        "Title": "Ensure that the --encryption-provider-config argument is set as appropriate",
        "Description": "Encrypt etcd key-value store.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0030",
        "Query": "data.builtin.kubernetes.KCV0030.deny",
        "Resolution": "Follow the Kubernetes documentation and configure a EncryptionConfig file. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --encryption-provider-config parameter to the path of that file",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0030",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0030"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0033",
        "AVDID": "AVD-KCV-0033",
        "Title": "Ensure that the --terminated-pod-gc-threshold argument is set as appropriate",
        "Description": "Activate garbage collector on pod termination, as appropriate.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0033",
        "Query": "data.builtin.kubernetes.KCV0033.deny",
        "Resolution": "Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the Control Plane node and set the --terminated-pod-gc-threshold to an appropriate threshold.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0033",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0033"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0034",
        "AVDID": "AVD-KCV-0034",
        "Title": "Ensure that the --profiling argument is set to false",
        "Description": "Disable profiling, if not needed.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0034",
        "Query": "data.builtin.kubernetes.KCV0034.deny",
        "Resolution": "Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the Control Plane node and set the below parameter.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0034",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0034"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0135",
        "AVDID": "AVD-KCV-0035",
        "Title": "Ensure that the --use-service-account-credentials argument is set to true",
        "Description": "Use individual service account credentials for each controller.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0035",
        "Query": "data.builtin.kubernetes.KCV0035.deny",
        "Resolution": "Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the Control Plane node to set the below parameter.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0135",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0135"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0036",
        "AVDID": "AVD-KCV-0036",
        "Title": "Ensure that the --service-account-private-key-file argument is set as appropriate",
        "Description": "Explicitly set a service account private key file for service accounts on the controller manager.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0036",
        "Query": "data.builtin.kubernetes.KCV0036.deny",
        "Resolution": "Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the Control Plane node and set the --service-account-private-key-file parameter to the private key file for service accounts.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0036",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0036"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0037",
        "AVDID": "AVD-KCV-0037",
        "Title": "Ensure that the --root-ca-file argument is set as appropriate",
        "Description": "Allow pods to verify the API server's serving certificate before establishing connections.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0037",
        "Query": "data.builtin.kubernetes.KCV0037.deny",
        "Resolution": "Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the Control Plane node and set the --root-ca-file parameter to the certificate bundle file`.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0037",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0037"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0038",
        "AVDID": "AVD-KCV-0038",
        "Title": "Ensure that the RotateKubeletServerCertificate argument is set to true",
        "Description": "Enable kubelet server certificate rotation on controller-manager.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0038",
        "Query": "data.builtin.kubernetes.KCV0038.deny",
        "Resolution": "Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the Control Plane node and set the --feature-gates parameter to include RotateKubeletServerCertificate=true .",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0038",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0038"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0039",
        "AVDID": "AVD-KCV-0039",
        "Title": "Ensure that the --bind-address argument is set to 127.0.0.1",
        "Description": "Do not bind the scheduler service to non-loopback insecure addresses.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0039",
        "Query": "data.builtin.kubernetes.KCV0039.deny",
        "Resolution": "Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the Control Plane node and ensure the correct value for the --bind-address parameter",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0039",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0039"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0040",
        "AVDID": "AVD-KCV-0040",
        "Title": "Ensure that the --profiling argument is set to false",
        "Description": "Disable profiling, if not needed.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0040",
        "Query": "data.builtin.kubernetes.KCV0040.deny",
        "Resolution": "Edit the Scheduler pod specification file /etc/kubernetes/manifests/kube-scheduler.yaml file on the Control Plane node and set the below parameter.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0040",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0040"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0041",
        "AVDID": "AVD-KCV-0041",
        "Title": "Ensure that the --bind-address argument is set to 127.0.0.1",
        "Description": "Do not bind the scheduler service to non-loopback insecure addresses.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0041",
        "Query": "data.builtin.kubernetes.KCV0041.deny",
        "Resolution": "Edit the Scheduler pod specification file /etc/kubernetes/manifests/kube-scheduler.yaml on the Control Plane node and ensure the correct value for the --bind-address parameter.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0041",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0041"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0042",
        "AVDID": "AVD-KCV-0042",
        "Title": "Ensure that the --cert-file and --key-file arguments are set as appropriate",
        "Description": "Configure TLS encryption for the etcd service.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0042",
        "Query": "data.builtin.kubernetes.KCV0042.deny",
        "Resolution": "Follow the etcd service documentation and configure TLS encryption. Then, edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameters.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0042",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0042"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0043",
        "AVDID": "AVD-KCV-0043",
        "Title": "Ensure that the --client-cert-auth argument is set to true",
        "Description": "Enable client authentication on etcd service.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0043",
        "Query": "data.builtin.kubernetes.KCV0043.deny",
        "Resolution": "Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameter.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0043",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0043"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0044",
        "AVDID": "AVD-KCV-0044",
        "Title": "Ensure that the --auto-tls argument is not set to true",
        "Description": "Do not use self-signed certificates for TLS.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0044",
        "Query": "data.builtin.kubernetes.KCV0044.deny",
        "Resolution": "Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and either remove the --auto-tls parameter or set it to false.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0044",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0044"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0045",
        "AVDID": "AVD-KCV-0045",
        "Title": "Ensure that the --peer-cert-file and --peer-key-file arguments are set as appropriate",
        "Description": "etcd should be configured to make use of TLS encryption for peer connections.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0045",
        "Query": "data.builtin.kubernetes.KCV0045.deny",
        "Resolution": "Follow the etcd service documentation and configure peer TLS encryption as appropriate for your etcd cluster. Then, edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameters.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0045",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0045"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0046",
        "AVDID": "AVD-KCV-0046",
        "Title": "Ensure that the --peer-client-cert-auth argument is set to true",
        "Description": "etcd should be configured for peer authentication.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0046",
        "Query": "data.builtin.kubernetes.KCV0046.deny",
        "Resolution": "Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameter.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0046",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0046"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0047",
        "AVDID": "AVD-KCV-0047",
        "Title": "Ensure that the --peer-auto-tls argument is not set to true",
        "Description": "Do not use self-signed certificates for TLS.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0047",
        "Query": "data.builtin.kubernetes.KCV0047.deny",
        "Resolution": "Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and either remove the --peer-auto-tls parameter or set it to false.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0047",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0047"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0048",
        "AVDID": "AVD-KCV-0048",
        "Title": "Ensure that the API server pod specification file permissions are set to 600 or more restrictive",
        "Description": "Ensure that the API server pod specification file has permissions of 600 or more restrictive.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0048",
        "Query": "data.builtin.kubernetes.KCV0048.deny",
        "Resolution": "Change the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml permissions of 600 or more restrictive ",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0048",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0048"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0049",
        "AVDID": "AVD-KCV-0049",
        "Title": "Ensure that the API server pod specification file ownership is set to root:root",
        "Description": "Ensure that the API server pod specification file ownership is set to root:root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0049",
        "Query": "data.builtin.kubernetes.KCV0049.deny",
        "Resolution": "Change the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml ownership to root:root",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0049",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0049"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0050",
        "AVDID": "AVD-KCV-0050",
        "Title": "Ensure that the controller manager pod specification file permissions are set to 600 or more restrictive",
        "Description": "Ensure that the controller manager pod specification file has permissions of 600 or more restrictive.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0050",
        "Query": "data.builtin.kubernetes.KCV0050.deny",
        "Resolution": "Change the controller manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml permissions of 600 or more restrictive ",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0050",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0050"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0051",
        "AVDID": "AVD-KCV-0051",
        "Title": "Ensure that the controller manager pod specification file ownership is set to root:root",
        "Description": "Ensure that the controller manager pod specification file ownership is set to root:root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0051",
        "Query": "data.builtin.kubernetes.KCV0051.deny",
        "Resolution": "Change the controller manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml ownership to root:root",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0051",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0051"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0052",
        "AVDID": "AVD-KCV-0052",
        "Title": "Ensure that the scheduler pod specification file permissions are set to 600 or more restrictive",
        "Description": "Ensure that the scheduler pod specification file has permissions of 600 or more restrictive.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0052",
        "Query": "data.builtin.kubernetes.KCV0052.deny",
        "Resolution": "Change the scheduler pod specification file /etc/kubernetes/manifests/kube-scheduler.yaml permissions of 600 or more restrictive ",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0052",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0052"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0053",
        "AVDID": "AVD-KCV-0053",
        "Title": "Ensure that the scheduler pod specification file ownership is set to root:root",
        "Description": "Ensure that the scheduler pod specification file ownership is set to root:root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0053",
        "Query": "data.builtin.kubernetes.KCV0053.deny",
        "Resolution": "Change the scheduler pod specification file /etc/kubernetes/manifests/kube-scheduler.yaml ownership to root:root",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0053",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0053"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0054",
        "AVDID": "AVD-KCV-0054",
        "Title": "Ensure that the etcd pod specification file permissions are set to 600 or more restrictive",
        "Description": "Ensure that the etcd pod specification file has permissions of 600 or more restrictive.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0054",
        "Query": "data.builtin.kubernetes.KCV0054.deny",
        "Resolution": "Change the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml permissions of 600 or more restrictive ",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0054",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0054"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0055",
        "AVDID": "AVD-KCV-0055",
        "Title": "Ensure that the etcd pod specification file ownership is set to root:root",
        "Description": "Ensure that the etcd pod specification file ownership is set to root:root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0055",
        "Query": "data.builtin.kubernetes.KCV0055.deny",
        "Resolution": "Change the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml ownership to root:root",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0055",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0055"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0056",
        "AVDID": "AVD-KCV-0056",
        "Title": "Ensure that the container network interface file permissions are set to 600 or more restrictive",
        "Description": "Ensure that the container network interface file has permissions of 600 or more restrictive.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0056",
        "Query": "data.builtin.kubernetes.KCV0056.deny",
        "Resolution": "Change the container network interface file path/to/cni/files permissions of 600 or more restrictive ",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0056",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0056"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0057",
        "AVDID": "AVD-KCV-0057",
        "Title": "Ensure that the container network interface file ownership is set to root:root",
        "Description": "Ensure that the container network interface file ownership is set to root:root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0057",
        "Query": "data.builtin.kubernetes.KCV0057.deny",
        "Resolution": "Change the container network interface file path/to/cni/files ownership to root:root",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0057",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0057"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0058",
        "AVDID": "AVD-KCV-0058",
        "Title": "Ensure that the etcd data directory permissions are set to 700 or more restrictive",
        "Description": "Ensure that the etcd data directory has permissions of 700 or more restrictive.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0058",
        "Query": "data.builtin.kubernetes.KCV0058.deny",
        "Resolution": "Change the etcd data directory /var/lib/etcd permissions of 700 or more restrictive ",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0058",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0058"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0059",
        "AVDID": "AVD-KCV-0059",
        "Title": "Ensure that the etcd data directory ownership is set to etcd:etcd",
        "Description": "Ensure that the etcd data directory ownership is set to etcd:etcd.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0059",
        "Query": "data.builtin.kubernetes.KCV0059.deny",
        "Resolution": "Change the etcd data directory /var/lib/etcd ownership to etcd:etcd",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0059",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0059"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0060",
        "AVDID": "AVD-KCV-0060",
        "Title": "Ensure that the admin config file permissions are set to 600 or more restrictive",
        "Description": "Ensure that the admin config file has permissions of 600 or more restrictive.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0060",
        "Query": "data.builtin.kubernetes.KCV0060.deny",
        "Resolution": "Change the admin config file /etc/kubernetes/admin.conf permissions of 600 or more restrictive ",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0060",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0060"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0061",
        "AVDID": "AVD-KCV-0061",
        "Title": "Ensure that the admin config  file ownership is set to root:root",
        "Description": "Ensure that the admin config  file ownership is set to root:root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0061",
        "Query": "data.builtin.kubernetes.KCV0061.deny",
        "Resolution": "Change the admin config  file /etc/kubernetes/admin.conf ownership to root:root",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0061",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0061"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0062",
        "AVDID": "AVD-KCV-0062",
        "Title": "Ensure that the scheduler config file permissions are set to 600 or more restrictive",
        "Description": "Ensure that the scheduler config file has permissions of 600 or more restrictive.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0062",
        "Query": "data.builtin.kubernetes.KCV0062.deny",
        "Resolution": "Change the scheduler config file /etc/kubernetes/scheduler.conf permissions of 600 or more restrictive ",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0062",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0062"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0063",
        "AVDID": "AVD-KCV-0063",
        "Title": "Ensure that the scheduler config  file ownership is set to root:root",
        "Description": "Ensure that the scheduler config  file ownership is set to root:root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0063",
        "Query": "data.builtin.kubernetes.KCV0063.deny",
        "Resolution": "Change the scheduler config  file /etc/kubernetes/scheduler.conf ownership to root:root",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0063",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0063"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0064",
        "AVDID": "AVD-KCV-0064",
        "Title": "Ensure that the controller-manager config file permissions are set to 600 or more restrictive",
        "Description": "Ensure that the controller-manager config file has permissions of 600 or more restrictive.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0064",
        "Query": "data.builtin.kubernetes.KCV0064.deny",
        "Resolution": "Change the controller manager config file /etc/kubernetes/controller-manager.conf permissions of 600 or more restrictive ",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0064",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0064"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0065",
        "AVDID": "AVD-KCV-0065",
        "Title": "Ensure that the controller-manager config  file ownership is set to root:root",
        "Description": "Ensure that the controller-manager config  file ownership is set to root:root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0065",
        "Query": "data.builtin.kubernetes.KCV0065.deny",
        "Resolution": "Change the controller-manager config  file /etc/kubernetes/controller-manager.conf ownership to root:root",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0065",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0065"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0066",
        "AVDID": "AVD-KCV-0066",
        "Title": "Ensure that the Kubernetes PKI directory and file file ownership is set to root:root",
        "Description": "Ensure that the Kubernetes PKI directory and file file ownership is set to root:root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0066",
        "Query": "data.builtin.kubernetes.KCV0066.deny",
        "Resolution": "Change the Kubernetes PKI directory and file file /etc/kubernetes/pki/ ownership to root:root",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0066",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0066"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0067",
        "AVDID": "AVD-KCV-0067",
        "Title": "Ensure that the Kubernetes PKI key file permission is set to 600",
        "Description": "Ensure that the Kubernetes PKI key file permission is set to 600.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0067",
        "Query": "data.builtin.kubernetes.KCV0067.deny",
        "Resolution": "Change the Kubernetes PKI key file /etc/kubernetes/pki/*.key permission to 600",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0067",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0067"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0068",
        "AVDID": "AVD-KCV-0068",
        "Title": "Ensure that the Kubernetes PKI certificate file permission is set to 600",
        "Description": "Ensure that the Kubernetes PKI certificate file permission is set to 600.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0068",
        "Query": "data.builtin.kubernetes.KCV0068.deny",
        "Resolution": "Change the Kubernetes PKI certificate file /etc/kubernetes/pki/*.crt permission to 600",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0068",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0068"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0069",
        "AVDID": "AVD-KCV-0069",
        "Title": "Ensure that the kubelet service file permissions are set to 600 or more restrictive",
        "Description": "Ensure that the kubelet service file has permissions of 600 or more restrictive.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0069",
        "Query": "data.builtin.kubernetes.KCV0069.deny",
        "Resolution": "Change the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf permissions of 600 or more restrictive ",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0069",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0069"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0070",
        "AVDID": "AVD-KCV-0070",
        "Title": "Ensure that the kubelet service file ownership is set to root:root",
        "Description": "Ensure that the kubelet service file ownership is set to root:root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0070",
        "Query": "data.builtin.kubernetes.KCV0070.deny",
        "Resolution": "Change the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf ownership to root:root",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0070",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0070"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0071",
        "AVDID": "AVD-KCV-0071",
        "Title": "If proxy kubeconfig file exists ensure permissions are set to 600 or more restrictive",
        "Description": "If kube-proxy is running, and if it is using a file-based kubeconfig file, ensure that the proxy kubeconfig file has permissions of 600 or more restrictive.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0071",
        "Query": "data.builtin.kubernetes.KCV0071.deny",
        "Resolution": "Change the proxy kubeconfig file \u003cpath\u003e\u003cfilename\u003e permissions to 600 or more restrictive if exist",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0071",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0071"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0072",
        "AVDID": "AVD-KCV-0072",
        "Title": "if proxy kubeconfig file exists ensure ownership is set to root:root",
        "Description": "If kube-proxy is running, ensure that the file ownership of its kubeconfig file is set to root:root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0072",
        "Query": "data.builtin.kubernetes.KCV0072.deny",
        "Resolution": "Change the proxy kubeconfig file \u003cpath\u003e\u003cfilename\u003e ownership to root:root if exist",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0072",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0072"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0073",
        "AVDID": "AVD-KCV-0073",
        "Title": "Ensure that the --kubeconfig kubelet.conf file permissions are set to 600 or more restrictive",
        "Description": "Ensure that the kubelet.conf file has permissions of 600 or more restrictive.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0073",
        "Query": "data.builtin.kubernetes.KCV0073.deny",
        "Resolution": "Change the kubelet.conf file permissions to 600 or more restrictive if exist",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0073",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0073"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0074",
        "AVDID": "AVD-KCV-0074",
        "Title": "Ensure that the --kubeconfig kubelet.conf file ownership is set to root:root",
        "Description": "Ensure that the kubelet.conf file ownership is set to root:root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0074",
        "Query": "data.builtin.kubernetes.KCV0074.deny",
        "Resolution": "Change the --kubeconfig kubelet.conf file ownership to root:root",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0074",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0074"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0075",
        "AVDID": "AVD-KCV-0075",
        "Title": "Ensure that the certificate authorities file permissions are set to 600 or more restrictive",
        "Description": "Ensure that the certificate authorities file has permissions of 600 or more restrictive.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0075",
        "Query": "data.builtin.kubernetes.KCV0075.deny",
        "Resolution": "Change the certificate authorities file permissions to 600 or more restrictive if exist",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0075",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0075"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0076",
        "AVDID": "AVD-KCV-0076",
        "Title": "Ensure that the client certificate authorities file ownership is set to root:root",
        "Description": "Ensure that the certificate authorities file ownership is set to root:root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0076",
        "Query": "data.builtin.kubernetes.KCV0076.deny",
        "Resolution": "Change the certificate authorities file ownership to root:root",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0076",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0076"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0077",
        "AVDID": "AVD-KCV-0077",
        "Title": "If the kubelet config.yaml configuration file is being used validate permissions set to 600 or more restrictive",
        "Description": "Ensure that if the kubelet refers to a configuration file with the --config argument, that file has permissions of 600 or more restrictive.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0077",
        "Query": "data.builtin.kubernetes.KCV0077.deny",
        "Resolution": "Change the kubelet config yaml permissions to 600 or more restrictive if exist",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0077",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0077"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0078",
        "AVDID": "AVD-KCV-0078",
        "Title": "If the kubelet config.yaml configuration file is being used validate file ownership is set to root:root ",
        "Description": "Ensure that if the kubelet refers to a configuration file with the --config argument, that file is owned by root:root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0078",
        "Query": "data.builtin.kubernetes.KCV0078.deny",
        "Resolution": "Change the kubelet config.yaml file ownership to root:root",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0078",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0078"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0079",
        "AVDID": "AVD-KCV-0079",
        "Title": "Ensure that the --anonymous-auth argument is set to false",
        "Description": "Disable anonymous requests to the Kubelet server.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0079",
        "Query": "data.builtin.kubernetes.KCV0079.deny",
        "Resolution": "Disable anonymous requests to the Kubelet server",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0079",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0079"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0080",
        "AVDID": "AVD-KCV-0080",
        "Title": "Ensure that the --authorization-mode argument is not set to AlwaysAllow",
        "Description": "Do not allow all requests. Enable explicit authorization.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0080",
        "Query": "data.builtin.kubernetes.KCV0080.deny",
        "Resolution": "edit Kubelet config and set authorization: mode to Webhook.",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0080",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0080"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0081",
        "AVDID": "AVD-KCV-0081",
        "Title": "Ensure that the --client-ca-file argument is set as appropriate",
        "Description": "Enable Kubelet authentication using certificates.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0081",
        "Query": "data.builtin.kubernetes.KCV0081.deny",
        "Resolution": "If using a Kubelet config file, edit  the --client-ca-file argument ito appropriate value",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0081",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0081"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0082",
        "AVDID": "AVD-KCV-0082",
        "Title": "Verify that the --read-only-port argument is set to 0",
        "Description": "Disable the read-only port.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0082",
        "Query": "data.builtin.kubernetes.KCV0082.deny",
        "Resolution": "Disable the read-only port",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0082",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0082"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0083",
        "AVDID": "AVD-KCV-0083",
        "Title": "Ensure that the --protect-kernel-defaults is set to true",
        "Description": "Protect tuned kernel parameters from overriding kubelet default kernel parameter values.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0083",
        "Query": "data.builtin.kubernetes.KCV0083.deny",
        "Resolution": "If using a Kubelet config file, edit the file to set protectKernelDefaults: true",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0083",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0083"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0084",
        "AVDID": "AVD-KCV-0084",
        "Title": "Ensure that the --make-iptables-util-chains argument is set to true",
        "Description": "Allow Kubelet to manage iptables.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0084",
        "Query": "data.builtin.kubernetes.KCV0084.deny",
        "Resolution": "If using a Kubelet config file, edit the file to set makeIPTablesUtilChains: true",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0084",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0084"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0085",
        "AVDID": "AVD-KCV-0085",
        "Title": "Ensure that the --streaming-connection-idle-timeout argument is not set to 0",
        "Description": "Do not disable timeouts on streaming connections.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0085",
        "Query": "data.builtin.kubernetes.KCV0085.deny",
        "Resolution": "Edit the kubelet service file /etc/kubernetes/kubelet.conf and set --streaming-connection-idle-timeout=5m ",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0085",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0085"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0086",
        "AVDID": "AVD-KCV-0086",
        "Title": "Ensure that the --hostname-override argument is not set",
        "Description": "Do not override node hostnames.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0086",
        "Query": "data.builtin.kubernetes.KCV0086.deny",
        "Resolution": "Edit the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and remove the --hostname-override argument",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0086",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0086"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0087",
        "AVDID": "AVD-KCV-0087",
        "Title": "Ensure that the --event-qps argument is set to 0 or a level which ensures appropriate event capture",
        "Description": "Security relevant information should be captured. The --event-qps flag on the Kubelet can be used to limit the rate at which events are gathered",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0087",
        "Query": "data.builtin.kubernetes.KCV0087.deny",
        "Resolution": "If using a Kubelet config file, edit the file to set eventRecordQPS: to an appropriate level. If using command line arguments, edit the kubelet service file",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0087",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0087"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0088",
        "AVDID": "AVD-KCV-0088",
        "Title": "Ensure that the --tls-cert-file argument are set as appropriate",
        "Description": "Setup TLS connection on the Kubelets.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0088",
        "Query": "data.builtin.kubernetes.KCV0088.deny",
        "Resolution": "If using a Kubelet config file, edit the file to set tlsCertFile to the location",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0088",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0088"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0089",
        "AVDID": "AVD-KCV-0089",
        "Title": "Ensure that the --tls-key-file argument are set as appropriate",
        "Description": "Setup TLS connection on the Kubelets.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0089",
        "Query": "data.builtin.kubernetes.KCV0089.deny",
        "Resolution": "If using a Kubelet config file, edit the file to set tlskeyFile to the location",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0089",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0089"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0090",
        "AVDID": "AVD-KCV-0090",
        "Title": "Ensure that the --rotate-certificates argument is not set to false",
        "Description": "Enable kubelet client certificate rotation.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0090",
        "Query": "data.builtin.kubernetes.KCV0090.deny",
        "Resolution": "If using a Kubelet config file, edit the file to add the line rotateCertificates: true or remove it altogether to use the default value.",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0090",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0090"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0091",
        "AVDID": "AVD-KCV-0091",
        "Title": "Verify that the RotateKubeletServerCertificate argument is set to true",
        "Description": "Enable kubelet server certificate rotation.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0091",
        "Query": "data.builtin.kubernetes.KCV0091.deny",
        "Resolution": "Edit the kubelet service file /etc/kubernetes/kubelet.conf and set --feature-gates=RotateKubeletServerCertificate=true",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0091",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0091"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KCV0092",
        "AVDID": "AVD-KCV-0092",
        "Title": "Ensure that the Kubelet only makes use of Strong Cryptographic Ciphers",
        "Description": "Ensure that the Kubelet is configured to only use strong cryptographic ciphers.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KCV0092",
        "Query": "data.builtin.kubernetes.KCV0092.deny",
        "Resolution": "If using a Kubelet config file, edit the file to set TLSCipherSuites",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/kcv0092",
        "References": [
          "https://www.cisecurity.org/benchmark/kubernetes",
          "https://avd.aquasec.com/misconfig/kcv0092"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV001",
        "AVDID": "AVD-KSV-0001",
        "Title": "Process can elevate its own privileges",
        "Description": "A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV001",
        "Query": "data.builtin.kubernetes.KSV001.deny",
        "Resolution": "Set 'set containers[].securityContext.allowPrivilegeEscalation' to 'false'.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv001",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
          "https://avd.aquasec.com/misconfig/ksv001"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV002",
        "AVDID": "AVD-KSV-0002",
        "Title": "Default AppArmor profile not set",
        "Description": "A program inside the container can bypass AppArmor protection policies.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV002",
        "Query": "data.builtin.kubernetes.KSV002.deny",
        "Resolution": "Remove 'container.apparmor.security.beta.kubernetes.io' annotation or set it to 'runtime/default'.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv002",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
          "https://avd.aquasec.com/misconfig/ksv002"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV003",
        "AVDID": "AVD-KSV-0003",
        "Title": "Default capabilities not dropped",
        "Description": "The container should drop all default capabilities and add only those that are needed for its execution.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV003",
        "Query": "data.builtin.kubernetes.KSV003.deny",
        "Resolution": "Add 'ALL' to containers[].securityContext.capabilities.drop.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv003",
        "References": [
          "https://kubesec.io/basics/containers-securitycontext-capabilities-drop-index-all/",
          "https://avd.aquasec.com/misconfig/ksv003"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV005",
        "AVDID": "AVD-KSV-0005",
        "Title": "SYS_ADMIN capability added",
        "Description": "SYS_ADMIN gives the processes running inside the container privileges that are equivalent to root.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV005",
        "Query": "data.builtin.kubernetes.KSV005.deny",
        "Resolution": "Remove the SYS_ADMIN capability from 'containers[].securityContext.capabilities.add'.",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv005",
        "References": [
          "https://kubesec.io/basics/containers-securitycontext-capabilities-add-index-sys-admin/",
          "https://avd.aquasec.com/misconfig/ksv005"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV006",
        "AVDID": "AVD-KSV-0006",
        "Title": "hostPath volume mounted with docker.sock",
        "Description": "Mounting docker.sock from the host can give the container full root access to the host.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV006",
        "Query": "data.builtin.kubernetes.KSV006.deny",
        "Resolution": "Do not specify /var/run/docker.socket in 'spec.template.volumes.hostPath.path'.",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv006",
        "References": [
          "https://kubesec.io/basics/spec-volumes-hostpath-path-var-run-docker-sock/",
          "https://avd.aquasec.com/misconfig/ksv006"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV008",
        "AVDID": "AVD-KSV-0008",
        "Title": "Access to host IPC namespace",
        "Description": "Sharing the host’s IPC namespace allows container processes to communicate with processes on the host.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV008",
        "Query": "data.builtin.kubernetes.KSV008.deny",
        "Resolution": "Do not set 'spec.template.spec.hostIPC' to true.",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv008",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
          "https://avd.aquasec.com/misconfig/ksv008"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV009",
        "AVDID": "AVD-KSV-0009",
        "Title": "Access to host network",
        "Description": "Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV009",
        "Query": "data.builtin.kubernetes.KSV009.deny",
        "Resolution": "Do not set 'spec.template.spec.hostNetwork' to true.",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv009",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
          "https://avd.aquasec.com/misconfig/ksv009"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV010",
        "AVDID": "AVD-KSV-0010",
        "Title": "Access to host PID",
        "Description": "Sharing the host’s PID namespace allows visibility on host processes, potentially leaking information such as environment variables and configuration.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV010",
        "Query": "data.builtin.kubernetes.KSV010.deny",
        "Resolution": "Do not set 'spec.template.spec.hostPID' to true.",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv010",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
          "https://avd.aquasec.com/misconfig/ksv010"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV011",
        "AVDID": "AVD-KSV-0011",
        "Title": "CPU not limited",
        "Description": "Enforcing CPU limits prevents DoS via resource exhaustion.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV011",
        "Query": "data.builtin.kubernetes.KSV011.deny",
        "Resolution": "Set a limit value under 'containers[].resources.limits.cpu'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv011",
        "References": [
          "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
          "https://avd.aquasec.com/misconfig/ksv011"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV012",
        "AVDID": "AVD-KSV-0012",
        "Title": "Runs as root user",
        "Description": "'runAsNonRoot' forces the running image to run as a non-root user to ensure least privileges.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV012",
        "Query": "data.builtin.kubernetes.KSV012.deny",
        "Resolution": "Set 'containers[].securityContext.runAsNonRoot' to true.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv012",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
          "https://avd.aquasec.com/misconfig/ksv012"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV013",
        "AVDID": "AVD-KSV-0013",
        "Title": "Image tag ':latest' used",
        "Description": "It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV013",
        "Query": "data.builtin.kubernetes.KSV013.deny",
        "Resolution": "Use a specific container image tag that is not 'latest'.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv013",
        "References": [
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images",
          "https://avd.aquasec.com/misconfig/ksv013"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV014",
        "AVDID": "AVD-KSV-0014",
        "Title": "Root file system is not read-only",
        "Description": "An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV014",
        "Query": "data.builtin.kubernetes.KSV014.deny",
        "Resolution": "Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv014",
        "References": [
          "https://kubesec.io/basics/containers-securitycontext-readonlyrootfilesystem-true/",
          "https://avd.aquasec.com/misconfig/ksv014"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV015",
        "AVDID": "AVD-KSV-0015",
        "Title": "CPU requests not specified",
        "Description": "When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV015",
        "Query": "data.builtin.kubernetes.KSV015.deny",
        "Resolution": "Set 'containers[].resources.requests.cpu'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv015",
        "References": [
          "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
          "https://avd.aquasec.com/misconfig/ksv015"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV016",
        "AVDID": "AVD-KSV-0016",
        "Title": "Memory requests not specified",
        "Description": "When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV016",
        "Query": "data.builtin.kubernetes.KSV016.deny",
        "Resolution": "Set 'containers[].resources.requests.memory'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv016",
        "References": [
          "https://kubesec.io/basics/containers-resources-limits-memory/",
          "https://avd.aquasec.com/misconfig/ksv016"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV017",
        "AVDID": "AVD-KSV-0017",
        "Title": "Privileged container",
        "Description": "Privileged containers share namespaces with the host system and do not offer any security. They should be used exclusively for system containers that require high privileges.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV017",
        "Query": "data.builtin.kubernetes.KSV017.deny",
        "Resolution": "Change 'containers[].securityContext.privileged' to 'false'.",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv017",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
          "https://avd.aquasec.com/misconfig/ksv017"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV018",
        "AVDID": "AVD-KSV-0018",
        "Title": "Memory not limited",
        "Description": "Enforcing memory limits prevents DoS via resource exhaustion.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV018",
        "Query": "data.builtin.kubernetes.KSV018.deny",
        "Resolution": "Set a limit value under 'containers[].resources.limits.memory'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv018",
        "References": [
          "https://kubesec.io/basics/containers-resources-limits-memory/",
          "https://avd.aquasec.com/misconfig/ksv018"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV020",
        "AVDID": "AVD-KSV-0020",
        "Title": "Runs with low user ID",
        "Description": "Force the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV020",
        "Query": "data.builtin.kubernetes.KSV020.deny",
        "Resolution": "Set 'containers[].securityContext.runAsUser' to an integer \u003e 10000.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv020",
        "References": [
          "https://kubesec.io/basics/containers-securitycontext-runasuser/",
          "https://avd.aquasec.com/misconfig/ksv020"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV021",
        "AVDID": "AVD-KSV-0021",
        "Title": "Runs with low group ID",
        "Description": "Force the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV021",
        "Query": "data.builtin.kubernetes.KSV021.deny",
        "Resolution": "Set 'containers[].securityContext.runAsGroup' to an integer \u003e 10000.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv021",
        "References": [
          "https://kubesec.io/basics/containers-securitycontext-runasuser/",
          "https://avd.aquasec.com/misconfig/ksv021"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV022",
        "AVDID": "AVD-KSV-0022",
        "Title": "Non-default capabilities added",
        "Description": "Adding NET_RAW or capabilities beyond the default set must be disallowed.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV022",
        "Query": "data.builtin.kubernetes.KSV022.deny",
        "Resolution": "Do not set spec.containers[*].securityContext.capabilities.add and spec.initContainers[*].securityContext.capabilities.add",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv022",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
          "https://avd.aquasec.com/misconfig/ksv022"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV023",
        "AVDID": "AVD-KSV-0023",
        "Title": "hostPath volumes mounted",
        "Description": "HostPath volumes must be forbidden.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV023",
        "Query": "data.builtin.kubernetes.KSV023.deny",
        "Resolution": "Do not set 'spec.volumes[*].hostPath'.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv023",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
          "https://avd.aquasec.com/misconfig/ksv023"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV024",
        "AVDID": "AVD-KSV-0024",
        "Title": "Access to host ports",
        "Description": "HostPorts should be disallowed, or at minimum restricted to a known list.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV024",
        "Query": "data.builtin.kubernetes.KSV024.deny",
        "Resolution": "Do not set spec.containers[*].ports[*].hostPort and spec.initContainers[*].ports[*].hostPort.",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv024",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
          "https://avd.aquasec.com/misconfig/ksv024"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV025",
        "AVDID": "AVD-KSV-0025",
        "Title": "SELinux custom options set",
        "Description": "Setting a custom SELinux user or role option should be forbidden.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV025",
        "Query": "data.builtin.kubernetes.KSV025.deny",
        "Resolution": "Do not set 'spec.securityContext.seLinuxOptions', spec.containers[*].securityContext.seLinuxOptions and spec.initContainers[*].securityContext.seLinuxOptions.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv025",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
          "https://avd.aquasec.com/misconfig/ksv025"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV026",
        "AVDID": "AVD-KSV-0026",
        "Title": "Unsafe sysctl options set",
        "Description": "Sysctls can disable security mechanisms or affect all containers on a host, and should be disallowed except for an allowed 'safe' subset. A sysctl is considered safe if it is namespaced in the container or the Pod, and it is isolated from other Pods or processes on the same Node.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV026",
        "Query": "data.builtin.kubernetes.KSV026.deny",
        "Resolution": "Do not set 'spec.securityContext.sysctls' or set to values in an allowed subset",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv026",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
          "https://avd.aquasec.com/misconfig/ksv026"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV027",
        "AVDID": "AVD-KSV-0027",
        "Title": "Non-default /proc masks set",
        "Description": "The default /proc masks are set up to reduce attack surface, and should be required.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV027",
        "Query": "data.builtin.kubernetes.KSV027.deny",
        "Resolution": "Do not set spec.containers[*].securityContext.procMount and spec.initContainers[*].securityContext.procMount.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv027",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
          "https://avd.aquasec.com/misconfig/ksv027"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV028",
        "AVDID": "AVD-KSV-0028",
        "Title": "Non-ephemeral volume types used",
        "Description": "In addition to restricting HostPath volumes, usage of non-ephemeral volume types should be limited to those defined through PersistentVolumes.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV028",
        "Query": "data.builtin.kubernetes.KSV028.deny",
        "Resolution": "Do not Set 'spec.volumes[*]' to any of the disallowed volume types.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv028",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
          "https://avd.aquasec.com/misconfig/ksv028"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV030",
        "AVDID": "AVD-KSV-0030",
        "Title": "Default Seccomp profile not set",
        "Description": "The RuntimeDefault/Localhost seccomp profile must be required, or allow specific additional profiles.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV030",
        "Query": "data.builtin.kubernetes.KSV030.deny",
        "Resolution": "Set 'spec.securityContext.seccompProfile.type', 'spec.containers[*].securityContext.seccompProfile' and 'spec.initContainers[*].securityContext.seccompProfile' to 'RuntimeDefault' or undefined.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv030",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
          "https://avd.aquasec.com/misconfig/ksv030"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV036",
        "AVDID": "AVD-KSV-0036",
        "Title": "Protecting Pod service account tokens",
        "Description": "ensure that Pod specifications disable the secret token being mounted by setting automountServiceAccountToken: false",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV036",
        "Query": "data.builtin.kubernetes.KSV036.deny",
        "Resolution": "Disable the mounting of service account secret token by setting automountServiceAccountToken to false",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv036",
        "References": [
          "https://kubernetes.io/docs/reference/access-authn-authz/service-accounts-admin/#serviceaccount-admission-controller",
          "https://avd.aquasec.com/misconfig/ksv036"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV037",
        "AVDID": "AVD-KSV-0037",
        "Title": "User Pods should not be placed in kube-system namespace",
        "Description": "ensure that User pods are not placed in kube-system namespace",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV037",
        "Query": "data.builtin.kubernetes.KSV037.deny",
        "Resolution": "Deploy the use pods into a designated namespace which is not kube-system.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv037",
        "References": [
          "https://kubernetes.io/docs/reference/setup-tools/kubeadm/implementation-details/",
          "https://avd.aquasec.com/misconfig/ksv037"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV038",
        "AVDID": "AVD-KSV-0038",
        "Title": "Selector usage in network policies",
        "Description": "ensure that network policies selectors are applied to pods or namespaces to restricted ingress and egress traffic within the pod network",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV038",
        "Query": "data.builtin.kubernetes.KSV038.deny",
        "Resolution": "create network policies and ensure that pods are selected using the podSelector and/or the namespaceSelector options",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv038",
        "References": [
          "https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy/",
          "https://avd.aquasec.com/misconfig/ksv038"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV041",
        "AVDID": "AVD-KSV-0041",
        "Title": "Do not allow management of secrets",
        "Description": "Check whether role permits managing secrets",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV041",
        "Query": "data.builtin.kubernetes.KSV041.deny",
        "Resolution": "Create a role which does not permit to manage secrets if not needed",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv041",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv041"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV042",
        "AVDID": "AVD-KSV-0042",
        "Title": "Do not allow deletion of pod logs",
        "Description": "Used to cover attacker’s tracks, but most clusters ship logs quickly off-cluster.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV042",
        "Query": "data.builtin.kubernetes.KSV042.deny",
        "Resolution": "Remove verbs 'delete' and 'deletecollection' for resource 'pods/log' for Role and ClusterRole",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv042",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv042"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV043",
        "AVDID": "AVD-KSV-0043",
        "Title": "Do not allow impersonation of privileged groups",
        "Description": "Check whether role permits impersonating privileged groups",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV043",
        "Query": "data.builtin.kubernetes.KSV043.deny",
        "Resolution": "Create a role which does not permit to impersonate privileged groups if not needed",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv043",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv043"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV044",
        "AVDID": "AVD-KSV-0044",
        "Title": "No wildcard verb and resource roles",
        "Description": "Check whether role permits wildcard verb on wildcard resource",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV044",
        "Query": "data.builtin.kubernetes.KSV044.deny",
        "Resolution": "Create a role which does not permit wildcard verb on wildcard resource",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv044",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv044"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV045",
        "AVDID": "AVD-KSV-0045",
        "Title": "No wildcard verb roles",
        "Description": "Check whether role permits wildcard verb on specific resources",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV045",
        "Query": "data.builtin.kubernetes.KSV045.deny",
        "Resolution": "Create a role which does not permit wildcard verb on specific resources",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv045",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv045"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV046",
        "AVDID": "AVD-KSV-0046",
        "Title": "No wildcard resource roles",
        "Description": "Check whether role permits specific verb on wildcard resources",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV046",
        "Query": "data.builtin.kubernetes.KSV046.deny",
        "Resolution": "Create a role which does not permit specific verb on wildcard resources",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv046",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv046"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV047",
        "AVDID": "AVD-KSV-0047",
        "Title": "Do not allow privilege escalation from node proxy",
        "Description": "Check whether role permits privilege escalation from node proxy",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV047",
        "Query": "data.builtin.kubernetes.KSV047.deny",
        "Resolution": "Create a role which does not permit privilege escalation from node proxy",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv047",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv047"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV048",
        "AVDID": "AVD-KSV-0048",
        "Title": "Do not allow update/create of a malicious pod",
        "Description": "Check whether role permits update/create of a malicious pod",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV048",
        "Query": "data.builtin.kubernetes.KSV048.deny",
        "Resolution": "Create a role which does not permit update/create of a malicious pod",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv048",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv048"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV049",
        "AVDID": "AVD-KSV-0049",
        "Title": "Do not allow management of configmaps",
        "Description": "Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV049",
        "Query": "data.builtin.kubernetes.KSV049.deny",
        "Resolution": "Remove write permission verbs for resource 'configmaps'",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv049",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv049"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV050",
        "AVDID": "AVD-KSV-0050",
        "Title": "Do not allow management of RBAC resources",
        "Description": "An effective level of access equivalent to cluster-admin should not be provided.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV050",
        "Query": "data.builtin.kubernetes.KSV050.deny",
        "Resolution": "Remove write permission verbs for resource 'roles' and 'rolebindings'",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv050",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv050"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV051",
        "AVDID": "AVD-KSV-0051",
        "Title": "Do not allow role binding creation and association with privileged role/clusterrole",
        "Description": "Check whether role permits creating role bindings and associating to privileged role/clusterrole",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV051",
        "Query": "data.builtin.kubernetes.KSV051.deny",
        "Resolution": "Create a role which does not permit creation of role bindings and associating with privileged cluster role",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv051",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv051"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV052",
        "AVDID": "AVD-KSV-0052",
        "Title": "Do not allow role to create ClusterRoleBindings and association with privileged role",
        "Description": "Check whether role permits creating role ClusterRoleBindings and association with privileged cluster role",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV052",
        "Query": "data.builtin.kubernetes.KSV052.deny",
        "Resolution": "Create a role which does not permit to create role clusterrolebindings and associate to privileged cluster role",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv052",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv052"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV053",
        "AVDID": "AVD-KSV-0053",
        "Title": "Do not allow getting shell on pods",
        "Description": "Check whether role permits getting shell on pods",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV053",
        "Query": "data.builtin.kubernetes.KSV053.deny",
        "Resolution": "Create a role which does not permit getting shell on pods",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv053",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv053"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV054",
        "AVDID": "AVD-KSV-0054",
        "Title": "Do not allow attaching to shell on pods",
        "Description": "Check whether role permits attaching to shell on pods",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV054",
        "Query": "data.builtin.kubernetes.KSV054.deny",
        "Resolution": "Create a role which does not permit attaching to shell on pods",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv054",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv054"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV055",
        "AVDID": "AVD-KSV-0055",
        "Title": "Do not allow users in a rolebinding to add other users to their rolebindings",
        "Description": "Check whether role permits allowing users in a rolebinding to add other users to their rolebindings",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV055",
        "Query": "data.builtin.kubernetes.KSV055.deny",
        "Resolution": "Create a role which does not permit allowing users in a rolebinding to add other users to their rolebindings if not needed",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv055",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv055"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV056",
        "AVDID": "AVD-KSV-0056",
        "Title": "Do not allow management of networking resources",
        "Description": "The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV056",
        "Query": "data.builtin.kubernetes.KSV056.deny",
        "Resolution": "Networking resources are only allowed for verbs 'list', 'watch', 'get'",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv056",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv056"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "AVD-KSV-0110",
        "AVDID": "AVD-KSV-01010",
        "Title": "ConfigMap with sensitive content",
        "Description": "Storing sensitive content such as usernames and email addresses in configMaps is unsafe",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV01010",
        "Query": "data.builtin.kubernetes.KSV01010.deny",
        "Resolution": "Remove sensitive content from configMap data value",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-ksv-0110",
        "References": [
          "https://avd.aquasec.com/misconfig/avd-ksv-0110"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV102",
        "AVDID": "AVD-KSV-0102",
        "Title": "Tiller Is Deployed",
        "Description": "Check if Helm Tiller component is deployed.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV102",
        "Query": "data.builtin.kubernetes.KSV102.deny",
        "Resolution": "Migrate to Helm v3 which no longer has Tiller component",
        "Severity": "CRITICAL",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv102",
        "References": [
          "https://avd.aquasec.com/misconfig/ksv102"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV103",
        "AVDID": "AVD-KSV-0103",
        "Title": "HostProcess container defined",
        "Description": "Windows pods offer the ability to run HostProcess containers which enable privileged access to the Windows node.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV103",
        "Query": "data.builtin.kubernetes.KSV103.deny",
        "Resolution": "Do not enable 'hostProcess' on any securityContext",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv103",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
          "https://avd.aquasec.com/misconfig/ksv103"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV104",
        "AVDID": "AVD-KSV-0104",
        "Title": "Seccomp profile unconfined",
        "Description": "Seccomp profile must not be explicitly set to 'Unconfined'.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV104",
        "Query": "data.builtin.kubernetes.KSV104.deny",
        "Resolution": "Do not set seccomp profile to 'Unconfined'",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv104",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
          "https://avd.aquasec.com/misconfig/ksv104"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV105",
        "AVDID": "AVD-KSV-0105",
        "Title": "Containers must not set runAsUser to 0",
        "Description": "Containers should be forbidden from running with a root UID.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV105",
        "Query": "data.builtin.kubernetes.KSV105.deny",
        "Resolution": "Set 'securityContext.runAsUser' to a non-zero integer or leave undefined.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv105",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
          "https://avd.aquasec.com/misconfig/ksv105"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV106",
        "AVDID": "AVD-KSV-0106",
        "Title": "Container capabilities must only include NET_BIND_SERVICE",
        "Description": "Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV106",
        "Query": "data.builtin.kubernetes.KSV106.deny",
        "Resolution": "Set 'spec.containers[*].securityContext.capabilities.drop' to 'ALL' and only add 'NET_BIND_SERVICE' to 'spec.containers[*].securityContext.capabilities.add'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv106",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
          "https://avd.aquasec.com/misconfig/ksv106"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "AVD-KSV-0108",
        "AVDID": "AVD-KSV-0108",
        "Title": "Service with External IP",
        "Description": "Services with external IP addresses allows direct access from the internet and might expose risk for CVE-2020-8554",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV0108",
        "Query": "data.builtin.kubernetes.KSV0108.deny",
        "Resolution": "Do not set spec.externalIPs",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-ksv-0108",
        "References": [
          "https://avd.aquasec.com/misconfig/avd-ksv-0108"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "AVD-KSV-0109",
        "AVDID": "AVD-KSV-0109",
        "Title": "ConfigMap with secrets",
        "Description": "Storing secrets in configMaps is unsafe",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV0109",
        "Query": "data.builtin.kubernetes.KSV0109.deny",
        "Resolution": "Remove password/secret from configMap data value",
        "Severity": "HIGH",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-ksv-0109",
        "References": [
          "https://avd.aquasec.com/misconfig/avd-ksv-0109"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV110",
        "AVDID": "AVD-KSV-0110",
        "Title": "The default namespace should not be used",
        "Description": "ensure that default namespace should not be used",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV110",
        "Query": "data.builtin.kubernetes.KSV110.deny",
        "Resolution": "Ensure that namespaces are created to allow for appropriate segregation of Kubernetes resources and that all new resources are created in a specific namespace.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv110",
        "References": [
          "https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
          "https://avd.aquasec.com/misconfig/ksv110"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV111",
        "AVDID": "AVD-KSV-0111",
        "Title": "Ensure that the cluster-admin role is only used where required",
        "Description": "The RBAC role cluster-admin provides wide-ranging powers over the environment and should be used only where and when needed.",
        "Message": "No issues found",
        "Namespace": "builtin.kubernetes.KSV111",
        "Query": "data.builtin.kubernetes.KSV111.deny",
        "Resolution": "Identify all clusterrolebindings to the cluster-admin role. Check if they are used and if they need this role or if they could use a role with fewer privileges.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv111",
        "References": [
          "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
          "https://avd.aquasec.com/misconfig/ksv111"
        ],
        "Status": "PASS",
        "Layer": {},
        "CauseMetadata": {
          "Provider": "Kubernetes",
          "Service": "general",
          "Code": {
            "Lines": null
          }
        }
      }
    ]
  }
]